{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Exception for chars": {
		"prefix": "me",
		"body": [
			"class MyException : public std::exception"
			"{"
			"	private:"
			"	const char* msg;"
""
			"	public:"
			"		MyException(const char* msg_) : msg(msg_){}"
			"		virtual ~MyException(){}"
""
			"		const char* what() const noexcept override"
			"		{"
			"			return msg;"
			"		}"
			"};"
		],
		"description": "Exception throw char string."
	},
	"Clear cin": {
		"prefix": "ic",
		"body": [
			"if(char(std::cin.peek()) == '\\n')"
	    	"	std::cin.ignore();"
""
			"if (std::cin.fail())"
			"{"
    		"	std::cin.clear();"
    		"	std::cin.ignore(32767, '\\n');"
			"}"
		],
		"description": "Clear cin for getline()."
	}
}